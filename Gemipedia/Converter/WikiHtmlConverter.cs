using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using AngleSharp;
using AngleSharp.Html.Parser;
using AngleSharp.Html.Dom;
using AngleSharp.Dom;

using Gemipedia.Converter.Filter;
using Gemipedia.Models;

namespace Gemipedia.Converter
{
	/// <summary>
    /// Takes HTML generated by media wiki, and converts it into GemText
    /// </summary>
	public class WikiHtmlConverter
	{
        ConverterSettings Settings;

        public WikiHtmlConverter(ConverterSettings settings)
        {
            Settings = settings;
            CommonUtils.Settings = settings;

            LoadDomFilters();
        }

        private void LoadDomFilters()
        {
            DomFilter.Global = new DomFilter();
            //locmaps have overlays we can't display
            DomFilter.Global.AddRule("div.locmap");
            //if its not for mobile don't display
            DomFilter.Global.AddRule(".nomobile");
            //side category and meta index tables
            DomFilter.Global.AddRule("table.sidebar");
            DomFilter.Global.AddRule("table.navbox-vertical");
            //dialogs at top that say something is wrong with the article
            DomFilter.Global.AddRule(".metadata");
            DomFilter.Global.AddRule("div.navbox");
            //geo
            DomFilter.Global.AddRule("span#coordinates");
        }


        public ParsedPage Convert(string title, string wikiHtml)
        {

            var contentRoot = Preparer.PrepareHtml(wikiHtml);

            Sectionizer sectionizer = new Sectionizer(Settings);

            var parsedPage = sectionizer.ParseContent(title, contentRoot);

            ConvertSections(parsedPage.Sections);

            return parsedPage;
        }

        private void ConvertSections(List<Section> sections)
            => sections.ForEach(x => ConvertSection(x));

        private void ConvertSection(Section section)
        {
            HtmlParser htmlParser = new HtmlParser();

            while (section.Nodes.Count > 0)
            {
                htmlParser.Parse(section.Nodes[0]);
                section.Nodes.RemoveAt(0);
            }

            section.AddItems(htmlParser.GetItems());
            ConvertSections(section.SubSections);
        }
    }
}

